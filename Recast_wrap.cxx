/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGJAVA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


typedef double DoubleArray;

SWIGINTERN DoubleArray *new_DoubleArray(int nelements){
  return new double[nelements];
}
SWIGINTERN void delete_DoubleArray(DoubleArray *self){
  delete [] self;
}
SWIGINTERN double DoubleArray_getitem(DoubleArray *self,int index){
  return self[index];
}
SWIGINTERN void DoubleArray_setitem(DoubleArray *self,int index,double value){
  self[index] = value;
}
SWIGINTERN double *DoubleArray_cast(DoubleArray *self){
  return self;
}
SWIGINTERN DoubleArray *DoubleArray_frompointer(double *t){
  return (DoubleArray *) t;
}

typedef float FloatArray;

SWIGINTERN FloatArray *new_FloatArray(int nelements){
  return new float[nelements];
}
SWIGINTERN void delete_FloatArray(FloatArray *self){
  delete [] self;
}
SWIGINTERN float FloatArray_getitem(FloatArray *self,int index){
  return self[index];
}
SWIGINTERN void FloatArray_setitem(FloatArray *self,int index,float value){
  self[index] = value;
}
SWIGINTERN float *FloatArray_cast(FloatArray *self){
  return self;
}
SWIGINTERN FloatArray *FloatArray_frompointer(float *t){
  return (FloatArray *) t;
}

typedef int IntArray;

SWIGINTERN IntArray *new_IntArray(int nelements){
  return new int[nelements];
}
SWIGINTERN void delete_IntArray(IntArray *self){
  delete [] self;
}
SWIGINTERN int IntArray_getitem(IntArray *self,int index){
  return self[index];
}
SWIGINTERN void IntArray_setitem(IntArray *self,int index,int value){
  self[index] = value;
}
SWIGINTERN int *IntArray_cast(IntArray *self){
  return self;
}
SWIGINTERN IntArray *IntArray_frompointer(int *t){
  return (IntArray *) t;
}

typedef unsigned char UCharArray;

SWIGINTERN UCharArray *new_UCharArray(int nelements){
  return new unsigned char[nelements];
}
SWIGINTERN void delete_UCharArray(UCharArray *self){
  delete [] self;
}
SWIGINTERN unsigned char UCharArray_getitem(UCharArray *self,int index){
  return self[index];
}
SWIGINTERN void UCharArray_setitem(UCharArray *self,int index,unsigned char value){
  self[index] = value;
}
SWIGINTERN unsigned char *UCharArray_cast(UCharArray *self){
  return self;
}
SWIGINTERN UCharArray *UCharArray_frompointer(unsigned char *t){
  return (UCharArray *) t;
}

typedef unsigned short UShortArray;

SWIGINTERN UShortArray *new_UShortArray(int nelements){
  return new unsigned short[nelements];
}
SWIGINTERN void delete_UShortArray(UShortArray *self){
  delete [] self;
}
SWIGINTERN unsigned short UShortArray_getitem(UShortArray *self,int index){
  return self[index];
}
SWIGINTERN void UShortArray_setitem(UShortArray *self,int index,unsigned short value){
  self[index] = value;
}
SWIGINTERN unsigned short *UShortArray_cast(UShortArray *self){
  return self;
}
SWIGINTERN UShortArray *UShortArray_frompointer(unsigned short *t){
  return (UShortArray *) t;
}

#include "Recast.h"
#include "RecastAlloc.h"
#include "RecastAssert.h"


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1DoubleArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  DoubleArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (DoubleArray *)new_DoubleArray(arg1);
  *(DoubleArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1DoubleArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  DoubleArray *arg1 = (DoubleArray *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(DoubleArray **)&jarg1; 
  delete_DoubleArray(arg1);
}


SWIGEXPORT jdouble JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_DoubleArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jdouble jresult = 0 ;
  DoubleArray *arg1 = (DoubleArray *) 0 ;
  int arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DoubleArray **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (double)DoubleArray_getitem(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_DoubleArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jdouble jarg3) {
  DoubleArray *arg1 = (DoubleArray *) 0 ;
  int arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DoubleArray **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  DoubleArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_DoubleArray_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  DoubleArray *arg1 = (DoubleArray *) 0 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DoubleArray **)&jarg1; 
  result = (double *)DoubleArray_cast(arg1);
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_DoubleArray_1frompointer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  double *arg1 = (double *) 0 ;
  DoubleArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  result = (DoubleArray *)DoubleArray_frompointer(arg1);
  *(DoubleArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1FloatArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  FloatArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (FloatArray *)new_FloatArray(arg1);
  *(FloatArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1FloatArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  FloatArray *arg1 = (FloatArray *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(FloatArray **)&jarg1; 
  delete_FloatArray(arg1);
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_FloatArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jfloat jresult = 0 ;
  FloatArray *arg1 = (FloatArray *) 0 ;
  int arg2 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FloatArray **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (float)FloatArray_getitem(arg1,arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_FloatArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jfloat jarg3) {
  FloatArray *arg1 = (FloatArray *) 0 ;
  int arg2 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FloatArray **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (float)jarg3; 
  FloatArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_FloatArray_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  FloatArray *arg1 = (FloatArray *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FloatArray **)&jarg1; 
  result = (float *)FloatArray_cast(arg1);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_FloatArray_1frompointer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  float *arg1 = (float *) 0 ;
  FloatArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  result = (FloatArray *)FloatArray_frompointer(arg1);
  *(FloatArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1IntArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  IntArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (IntArray *)new_IntArray(arg1);
  *(IntArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1IntArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  IntArray *arg1 = (IntArray *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(IntArray **)&jarg1; 
  delete_IntArray(arg1);
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_IntArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  IntArray *arg1 = (IntArray *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IntArray **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)IntArray_getitem(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_IntArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  IntArray *arg1 = (IntArray *) 0 ;
  int arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IntArray **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  IntArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_IntArray_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  IntArray *arg1 = (IntArray *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(IntArray **)&jarg1; 
  result = (int *)IntArray_cast(arg1);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_IntArray_1frompointer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  int *arg1 = (int *) 0 ;
  IntArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int **)&jarg1; 
  result = (IntArray *)IntArray_frompointer(arg1);
  *(IntArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1UCharArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  UCharArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (UCharArray *)new_UCharArray(arg1);
  *(UCharArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1UCharArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  UCharArray *arg1 = (UCharArray *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(UCharArray **)&jarg1; 
  delete_UCharArray(arg1);
}


SWIGEXPORT jshort JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_UCharArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jshort jresult = 0 ;
  UCharArray *arg1 = (UCharArray *) 0 ;
  int arg2 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UCharArray **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (unsigned char)UCharArray_getitem(arg1,arg2);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_UCharArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jshort jarg3) {
  UCharArray *arg1 = (UCharArray *) 0 ;
  int arg2 ;
  unsigned char arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UCharArray **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (unsigned char)jarg3; 
  UCharArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_UCharArray_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UCharArray *arg1 = (UCharArray *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UCharArray **)&jarg1; 
  result = (unsigned char *)UCharArray_cast(arg1);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_UCharArray_1frompointer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  unsigned char *arg1 = (unsigned char *) 0 ;
  UCharArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned char **)&jarg1; 
  result = (UCharArray *)UCharArray_frompointer(arg1);
  *(UCharArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1UShortArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  UShortArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (UShortArray *)new_UShortArray(arg1);
  *(UShortArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1UShortArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  UShortArray *arg1 = (UShortArray *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(UShortArray **)&jarg1; 
  delete_UShortArray(arg1);
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_UShortArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  UShortArray *arg1 = (UShortArray *) 0 ;
  int arg2 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UShortArray **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (unsigned short)UShortArray_getitem(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_UShortArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  UShortArray *arg1 = (UShortArray *) 0 ;
  int arg2 ;
  unsigned short arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UShortArray **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (unsigned short)jarg3; 
  UShortArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_UShortArray_1cast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UShortArray *arg1 = (UShortArray *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UShortArray **)&jarg1; 
  result = (unsigned short *)UShortArray_cast(arg1);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_UShortArray_1frompointer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  unsigned short *arg1 = (unsigned short *) 0 ;
  UShortArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned short **)&jarg1; 
  result = (UShortArray *)UShortArray_frompointer(arg1);
  *(UShortArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1PI_1get(JNIEnv *jenv, jclass jcls) {
  jfloat jresult = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  result = (float)(float)RC_PI;
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1LOG_1PROGRESS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  rcLogCategory result;
  
  (void)jenv;
  (void)jcls;
  result = (rcLogCategory)RC_LOG_PROGRESS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcContext_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jboolean jarg1) {
  jlong jresult = 0 ;
  bool arg1 ;
  rcContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = jarg1 ? true : false; 
  result = (rcContext *)new rcContext(arg1);
  *(rcContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcContext_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcContext *)new rcContext();
  *(rcContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcContext(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcContext *arg1 = (rcContext *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcContext **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContext_1enableLog(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  rcContext *arg1 = (rcContext *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->enableLog(arg2);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContext_1resetLog(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  rcContext *arg1 = (rcContext *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  (arg1)->resetLog();
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContext_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3) {
  rcContext *arg1 = (rcContext *) 0 ;
  rcLogCategory arg2 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (rcLogCategory)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  (arg1)->log(arg2,(char const *)arg3,arg4);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContext_1enableTimer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  rcContext *arg1 = (rcContext *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  (arg1)->enableTimer(arg2);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContext_1resetTimers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  rcContext *arg1 = (rcContext *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  (arg1)->resetTimers();
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContext_1startTimer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContext *arg1 = (rcContext *) 0 ;
  rcTimerLabel arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (rcTimerLabel)jarg2; 
  (arg1)->startTimer(arg2);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContext_1stopTimer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContext *arg1 = (rcContext *) 0 ;
  rcTimerLabel arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (rcTimerLabel)jarg2; 
  (arg1)->stopTimer(arg2);
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContext_1getAccumulatedTime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcTimerLabel arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (rcTimerLabel)jarg2; 
  result = (int)((rcContext const *)arg1)->getAccumulatedTime(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1width_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1width_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->width);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1height_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1height_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->height);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1tileSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tileSize = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1tileSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->tileSize);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1borderSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->borderSize = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1borderSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->borderSize);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1cs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->cs = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1cs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (float) ((arg1)->cs);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1ch_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->ch = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1ch_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (float) ((arg1)->ch);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1bmin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1bmin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmin);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1bmax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1bmax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmax);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1walkableSlopeAngle_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->walkableSlopeAngle = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1walkableSlopeAngle_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (float) ((arg1)->walkableSlopeAngle);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1walkableHeight_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->walkableHeight = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1walkableHeight_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->walkableHeight);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1walkableClimb_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->walkableClimb = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1walkableClimb_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->walkableClimb);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1walkableRadius_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->walkableRadius = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1walkableRadius_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->walkableRadius);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1maxEdgeLen_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maxEdgeLen = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1maxEdgeLen_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->maxEdgeLen);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1maxSimplificationError_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->maxSimplificationError = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1maxSimplificationError_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (float) ((arg1)->maxSimplificationError);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1minRegionArea_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->minRegionArea = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1minRegionArea_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->minRegionArea);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1mergeRegionArea_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->mergeRegionArea = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1mergeRegionArea_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->mergeRegionArea);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1maxVertsPerPoly_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maxVertsPerPoly = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1maxVertsPerPoly_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (int) ((arg1)->maxVertsPerPoly);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1detailSampleDist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->detailSampleDist = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1detailSampleDist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (float) ((arg1)->detailSampleDist);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1detailSampleMaxError_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->detailSampleMaxError = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcConfig_1detailSampleMaxError_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcConfig *arg1 = (rcConfig *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcConfig **)&jarg1; 
  result = (float) ((arg1)->detailSampleMaxError);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcConfig(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcConfig *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcConfig *)new rcConfig();
  *(rcConfig **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcConfig(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcConfig *arg1 = (rcConfig *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcConfig **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1SPAN_1HEIGHT_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)RC_SPAN_HEIGHT_BITS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1SPAN_1MAX_1HEIGHT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)RC_SPAN_MAX_HEIGHT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1SPANS_1PER_1POOL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)RC_SPANS_PER_POOL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpan_1smin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcSpan *arg1 = (rcSpan *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpan **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->smin = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpan_1smin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcSpan *arg1 = (rcSpan *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpan **)&jarg1; 
  result = (unsigned int) ((arg1)->smin);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpan_1smax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcSpan *arg1 = (rcSpan *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpan **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->smax = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpan_1smax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcSpan *arg1 = (rcSpan *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpan **)&jarg1; 
  result = (unsigned int) ((arg1)->smax);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpan_1area_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcSpan *arg1 = (rcSpan *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpan **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->area = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpan_1area_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcSpan *arg1 = (rcSpan *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpan **)&jarg1; 
  result = (unsigned int) ((arg1)->area);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpan_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcSpan *arg1 = (rcSpan *) 0 ;
  rcSpan *arg2 = (rcSpan *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcSpan **)&jarg1; 
  arg2 = *(rcSpan **)&jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpan_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcSpan *arg1 = (rcSpan *) 0 ;
  rcSpan *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpan **)&jarg1; 
  result = (rcSpan *) ((arg1)->next);
  *(rcSpan **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcSpan(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcSpan *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcSpan *)new rcSpan();
  *(rcSpan **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcSpan(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcSpan *arg1 = (rcSpan *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcSpan **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpanPool_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcSpanPool *arg1 = (rcSpanPool *) 0 ;
  rcSpanPool *arg2 = (rcSpanPool *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcSpanPool **)&jarg1; 
  arg2 = *(rcSpanPool **)&jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpanPool_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcSpanPool *arg1 = (rcSpanPool *) 0 ;
  rcSpanPool *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpanPool **)&jarg1; 
  result = (rcSpanPool *) ((arg1)->next);
  *(rcSpanPool **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpanPool_1items_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcSpanPool *arg1 = (rcSpanPool *) 0 ;
  rcSpan *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcSpanPool **)&jarg1; 
  arg2 = *(rcSpan **)&jarg2; 
  {
    size_t ii;
    rcSpan *b = (rcSpan *) arg1->items;
    for (ii = 0; ii < (size_t)RC_SPANS_PER_POOL; ii++) b[ii] = *((rcSpan *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSpanPool_1items_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcSpanPool *arg1 = (rcSpanPool *) 0 ;
  rcSpan *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcSpanPool **)&jarg1; 
  result = (rcSpan *)(rcSpan *) ((arg1)->items);
  *(rcSpan **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcSpanPool(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcSpanPool *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcSpanPool *)new rcSpanPool();
  *(rcSpanPool **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcSpanPool(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcSpanPool *arg1 = (rcSpanPool *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcSpanPool **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1width_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1width_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (int) ((arg1)->width);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1height_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1height_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (int) ((arg1)->height);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1bmin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1bmin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmin);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1bmax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1bmax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmax);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1cs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->cs = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1cs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (float) ((arg1)->cs);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1ch_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->ch = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1ch_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (float) ((arg1)->ch);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1spans_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  rcSpan **arg2 = (rcSpan **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = *(rcSpan ***)&jarg2; 
  if (arg1) (arg1)->spans = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1spans_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  rcSpan **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (rcSpan **) ((arg1)->spans);
  *(rcSpan ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1pools_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  rcSpanPool *arg2 = (rcSpanPool *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = *(rcSpanPool **)&jarg2; 
  if (arg1) (arg1)->pools = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1pools_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  rcSpanPool *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (rcSpanPool *) ((arg1)->pools);
  *(rcSpanPool **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1freelist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  rcSpan *arg2 = (rcSpan *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcHeightfield **)&jarg1; 
  arg2 = *(rcSpan **)&jarg2; 
  if (arg1) (arg1)->freelist = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfield_1freelist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  rcSpan *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  result = (rcSpan *) ((arg1)->freelist);
  *(rcSpan **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcHeightfield(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcHeightfield *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcHeightfield *)new rcHeightfield();
  *(rcHeightfield **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcHeightfield(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcHeightfield **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactCell_1index_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcCompactCell *arg1 = (rcCompactCell *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactCell **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->index = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactCell_1index_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactCell *arg1 = (rcCompactCell *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactCell **)&jarg1; 
  result = (unsigned int) ((arg1)->index);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactCell_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcCompactCell *arg1 = (rcCompactCell *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactCell **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactCell_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactCell *arg1 = (rcCompactCell *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactCell **)&jarg1; 
  result = (unsigned int) ((arg1)->count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcCompactCell(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcCompactCell *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcCompactCell *)new rcCompactCell();
  *(rcCompactCell **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcCompactCell(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcCompactCell *arg1 = (rcCompactCell *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcCompactCell **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactSpan_1y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  unsigned short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactSpan_1y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1; 
  result = (unsigned short) ((arg1)->y);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactSpan_1reg_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  unsigned short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->reg = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactSpan_1reg_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1; 
  result = (unsigned short) ((arg1)->reg);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactSpan_1con_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->con = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactSpan_1con_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1; 
  result = (unsigned int) ((arg1)->con);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactSpan_1h_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->h = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactSpan_1h_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1; 
  result = (unsigned int) ((arg1)->h);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcCompactSpan(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcCompactSpan *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcCompactSpan *)new rcCompactSpan();
  *(rcCompactSpan **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcCompactSpan(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcCompactSpan *arg1 = (rcCompactSpan *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcCompactSpan **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1width_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1width_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (int) ((arg1)->width);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1height_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1height_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (int) ((arg1)->height);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1spanCount_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spanCount = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1spanCount_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (int) ((arg1)->spanCount);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1walkableHeight_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->walkableHeight = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1walkableHeight_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (int) ((arg1)->walkableHeight);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1walkableClimb_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->walkableClimb = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1walkableClimb_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (int) ((arg1)->walkableClimb);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1borderSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->borderSize = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1borderSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (int) ((arg1)->borderSize);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1maxDistance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  unsigned short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->maxDistance = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1maxDistance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (unsigned short) ((arg1)->maxDistance);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1maxRegions_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  unsigned short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->maxRegions = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1maxRegions_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (unsigned short) ((arg1)->maxRegions);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1bmin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1bmin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmin);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1bmax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1bmax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmax);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1cs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->cs = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1cs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (float) ((arg1)->cs);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1ch_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->ch = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1ch_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (float) ((arg1)->ch);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1cells_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  rcCompactCell *arg2 = (rcCompactCell *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = *(rcCompactCell **)&jarg2; 
  if (arg1) (arg1)->cells = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1cells_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  rcCompactCell *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (rcCompactCell *) ((arg1)->cells);
  *(rcCompactCell **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1spans_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  rcCompactSpan *arg2 = (rcCompactSpan *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = *(rcCompactSpan **)&jarg2; 
  if (arg1) (arg1)->spans = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1spans_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  rcCompactSpan *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (rcCompactSpan *) ((arg1)->spans);
  *(rcCompactSpan **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1dist_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = *(unsigned short **)&jarg2; 
  if (arg1) (arg1)->dist = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1dist_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (unsigned short *) ((arg1)->dist);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1areas_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  if (arg1) (arg1)->areas = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCompactHeightfield_1areas_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  result = (unsigned char *) ((arg1)->areas);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcCompactHeightfield(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcCompactHeightfield *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcCompactHeightfield *)new rcCompactHeightfield();
  *(rcCompactHeightfield **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcCompactHeightfield(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1bmin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1bmin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmin);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1bmax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1bmax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmax);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1cs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->cs = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1cs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (float) ((arg1)->cs);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1ch_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->ch = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1ch_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (float) ((arg1)->ch);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1width_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1width_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (int) ((arg1)->width);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1height_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1height_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (int) ((arg1)->height);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1minx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->minx = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1minx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (int) ((arg1)->minx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1maxx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maxx = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1maxx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (int) ((arg1)->maxx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1miny_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->miny = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1miny_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (int) ((arg1)->miny);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1maxy_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maxy = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1maxy_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (int) ((arg1)->maxy);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1hmin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->hmin = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1hmin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (int) ((arg1)->hmin);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1hmax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->hmax = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1hmax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (int) ((arg1)->hmax);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1heights_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  if (arg1) (arg1)->heights = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1heights_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (unsigned char *) ((arg1)->heights);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1areas_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  if (arg1) (arg1)->areas = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1areas_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (unsigned char *) ((arg1)->areas);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1cons_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  if (arg1) (arg1)->cons = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayer_1cons_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  result = (unsigned char *) ((arg1)->cons);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcHeightfieldLayer(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcHeightfieldLayer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcHeightfieldLayer *)new rcHeightfieldLayer();
  *(rcHeightfieldLayer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcHeightfieldLayer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcHeightfieldLayer *arg1 = (rcHeightfieldLayer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcHeightfieldLayer **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayerSet_1layers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcHeightfieldLayerSet *arg1 = (rcHeightfieldLayerSet *) 0 ;
  rcHeightfieldLayer *arg2 = (rcHeightfieldLayer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcHeightfieldLayerSet **)&jarg1; 
  arg2 = *(rcHeightfieldLayer **)&jarg2; 
  if (arg1) (arg1)->layers = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayerSet_1layers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcHeightfieldLayerSet *arg1 = (rcHeightfieldLayerSet *) 0 ;
  rcHeightfieldLayer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayerSet **)&jarg1; 
  result = (rcHeightfieldLayer *) ((arg1)->layers);
  *(rcHeightfieldLayer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayerSet_1nlayers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcHeightfieldLayerSet *arg1 = (rcHeightfieldLayerSet *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayerSet **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nlayers = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcHeightfieldLayerSet_1nlayers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcHeightfieldLayerSet *arg1 = (rcHeightfieldLayerSet *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayerSet **)&jarg1; 
  result = (int) ((arg1)->nlayers);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcHeightfieldLayerSet(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcHeightfieldLayerSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcHeightfieldLayerSet *)new rcHeightfieldLayerSet();
  *(rcHeightfieldLayerSet **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcHeightfieldLayerSet(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcHeightfieldLayerSet *arg1 = (rcHeightfieldLayerSet *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcHeightfieldLayerSet **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1verts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcContour *arg1 = (rcContour *) 0 ;
  int *arg2 = (int *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  if (arg1) (arg1)->verts = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1verts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcContour *arg1 = (rcContour *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  result = (int *) ((arg1)->verts);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1nverts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContour *arg1 = (rcContour *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nverts = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1nverts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcContour *arg1 = (rcContour *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  result = (int) ((arg1)->nverts);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1rverts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcContour *arg1 = (rcContour *) 0 ;
  int *arg2 = (int *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  if (arg1) (arg1)->rverts = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1rverts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcContour *arg1 = (rcContour *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  result = (int *) ((arg1)->rverts);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1nrverts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContour *arg1 = (rcContour *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nrverts = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1nrverts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcContour *arg1 = (rcContour *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  result = (int) ((arg1)->nrverts);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1reg_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContour *arg1 = (rcContour *) 0 ;
  unsigned short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->reg = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1reg_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcContour *arg1 = (rcContour *) 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  result = (unsigned short) ((arg1)->reg);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1area_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  rcContour *arg1 = (rcContour *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->area = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContour_1area_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  rcContour *arg1 = (rcContour *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContour **)&jarg1; 
  result = (unsigned char) ((arg1)->area);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcContour(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcContour *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcContour *)new rcContour();
  *(rcContour **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcContour(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcContour *arg1 = (rcContour *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcContour **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1conts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  rcContour *arg2 = (rcContour *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = *(rcContour **)&jarg2; 
  if (arg1) (arg1)->conts = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1conts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  rcContour *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (rcContour *) ((arg1)->conts);
  *(rcContour **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1nconts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nconts = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1nconts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (int) ((arg1)->nconts);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1bmin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1bmin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmin);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1bmax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1bmax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmax);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1cs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->cs = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1cs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (float) ((arg1)->cs);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1ch_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->ch = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1ch_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (float) ((arg1)->ch);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1width_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->width = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1width_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (int) ((arg1)->width);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1height_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->height = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1height_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (int) ((arg1)->height);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1borderSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->borderSize = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcContourSet_1borderSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  result = (int) ((arg1)->borderSize);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcContourSet(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcContourSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcContourSet *)new rcContourSet();
  *(rcContourSet **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcContourSet(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcContourSet **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1verts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = *(unsigned short **)&jarg2; 
  if (arg1) (arg1)->verts = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1verts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (unsigned short *) ((arg1)->verts);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1polys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = *(unsigned short **)&jarg2; 
  if (arg1) (arg1)->polys = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1polys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (unsigned short *) ((arg1)->polys);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1regs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = *(unsigned short **)&jarg2; 
  if (arg1) (arg1)->regs = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1regs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (unsigned short *) ((arg1)->regs);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = *(unsigned short **)&jarg2; 
  if (arg1) (arg1)->flags = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (unsigned short *) ((arg1)->flags);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1areas_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  if (arg1) (arg1)->areas = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1areas_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (unsigned char *) ((arg1)->areas);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1nverts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nverts = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1nverts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (int) ((arg1)->nverts);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1npolys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->npolys = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1npolys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (int) ((arg1)->npolys);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1maxpolys_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maxpolys = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1maxpolys_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (int) ((arg1)->maxpolys);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1nvp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nvp = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1nvp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (int) ((arg1)->nvp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1bmin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmin;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1bmin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmin);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1bmax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  float *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  {
    size_t ii;
    float *b = (float *) arg1->bmax;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1bmax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (float *)(float *) ((arg1)->bmax);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1cs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->cs = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1cs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (float) ((arg1)->cs);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1ch_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->ch = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1ch_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (float) ((arg1)->ch);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1borderSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->borderSize = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMesh_1borderSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  result = (int) ((arg1)->borderSize);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcPolyMesh(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcPolyMesh *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcPolyMesh *)new rcPolyMesh();
  *(rcPolyMesh **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcPolyMesh(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcPolyMesh **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1meshes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  arg2 = *(unsigned int **)&jarg2; 
  if (arg1) (arg1)->meshes = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1meshes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  unsigned int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  result = (unsigned int *) ((arg1)->meshes);
  *(unsigned int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1verts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  float *arg2 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  if (arg1) (arg1)->verts = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1verts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  result = (float *) ((arg1)->verts);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1tris_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  if (arg1) (arg1)->tris = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1tris_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  result = (unsigned char *) ((arg1)->tris);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1nmeshes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nmeshes = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1nmeshes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  result = (int) ((arg1)->nmeshes);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1nverts_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nverts = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1nverts_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  result = (int) ((arg1)->nverts);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1ntris_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->ntris = arg2;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcPolyMeshDetail_1ntris_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  result = (int) ((arg1)->ntris);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcPolyMeshDetail(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcPolyMeshDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcPolyMeshDetail *)new rcPolyMeshDetail();
  *(rcPolyMeshDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcPolyMeshDetail(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAllocHeightfield(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcHeightfield *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcHeightfield *)rcAllocHeightfield();
  *(rcHeightfield **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFreeHeightField(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  rcHeightfield *arg1 = (rcHeightfield *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfield **)&jarg1; 
  rcFreeHeightField(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAllocCompactHeightfield(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcCompactHeightfield *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcCompactHeightfield *)rcAllocCompactHeightfield();
  *(rcCompactHeightfield **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFreeCompactHeightfield(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  rcCompactHeightfield *arg1 = (rcCompactHeightfield *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactHeightfield **)&jarg1; 
  rcFreeCompactHeightfield(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAllocHeightfieldLayerSet(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcHeightfieldLayerSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcHeightfieldLayerSet *)rcAllocHeightfieldLayerSet();
  *(rcHeightfieldLayerSet **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFreeHeightfieldLayerSet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  rcHeightfieldLayerSet *arg1 = (rcHeightfieldLayerSet *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcHeightfieldLayerSet **)&jarg1; 
  rcFreeHeightfieldLayerSet(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAllocContourSet(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcContourSet *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcContourSet *)rcAllocContourSet();
  *(rcContourSet **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFreeContourSet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  rcContourSet *arg1 = (rcContourSet *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContourSet **)&jarg1; 
  rcFreeContourSet(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAllocPolyMesh(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcPolyMesh *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcPolyMesh *)rcAllocPolyMesh();
  *(rcPolyMesh **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFreePolyMesh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  rcPolyMesh *arg1 = (rcPolyMesh *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMesh **)&jarg1; 
  rcFreePolyMesh(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAllocPolyMeshDetail(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcPolyMeshDetail *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcPolyMeshDetail *)rcAllocPolyMeshDetail();
  *(rcPolyMeshDetail **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFreePolyMeshDetail(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  rcPolyMeshDetail *arg1 = (rcPolyMeshDetail *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcPolyMeshDetail **)&jarg1; 
  rcFreePolyMeshDetail(arg1);
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1BORDER_1REG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned short)(unsigned short)RC_BORDER_REG;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1BORDER_1VERTEX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)RC_BORDER_VERTEX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1AREA_1BORDER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)RC_AREA_BORDER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1CONTOUR_1TESS_1WALL_1EDGES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  rcBuildContoursFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (rcBuildContoursFlags)RC_CONTOUR_TESS_WALL_EDGES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1CONTOUR_1TESS_1AREA_1EDGES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  rcBuildContoursFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (rcBuildContoursFlags)RC_CONTOUR_TESS_AREA_EDGES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1CONTOUR_1REG_1MASK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)RC_CONTOUR_REG_MASK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1MESH_1NULL_1IDX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned short)(unsigned short)RC_MESH_NULL_IDX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jshort JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1NULL_1AREA_1get(JNIEnv *jenv, jclass jcls) {
  jshort jresult = 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned char)(unsigned char)RC_NULL_AREA;
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT jshort JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1WALKABLE_1AREA_1get(JNIEnv *jenv, jclass jcls) {
  jshort jresult = 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned char)(unsigned char)RC_WALKABLE_AREA;
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_RC_1NOT_1CONNECTED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)RC_NOT_CONNECTED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSqrt(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
  jfloat jresult = 0 ;
  float arg1 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  result = (float)rcSqrt(arg1);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVcross(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(float **)&jarg3; 
  rcVcross(arg1,(float const *)arg2,(float const *)arg3);
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVdot(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jfloat jresult = 0 ;
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  result = (float)rcVdot((float const *)arg1,(float const *)arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVmad(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jfloat jarg4) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(float **)&jarg3; 
  arg4 = (float)jarg4; 
  rcVmad(arg1,(float const *)arg2,(float const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVadd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(float **)&jarg3; 
  rcVadd(arg1,(float const *)arg2,(float const *)arg3);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVsub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(float **)&jarg3; 
  rcVsub(arg1,(float const *)arg2,(float const *)arg3);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVmin(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  rcVmin(arg1,(float const *)arg2);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVmax(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  rcVmax(arg1,(float const *)arg2);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVcopy(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  rcVcopy(arg1,(float const *)arg2);
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVdist(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jfloat jresult = 0 ;
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  result = (float)rcVdist((float const *)arg1,(float const *)arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVdistSqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jfloat jresult = 0 ;
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  result = (float)rcVdistSqr((float const *)arg1,(float const *)arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcVnormalize(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  float *arg1 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  rcVnormalize(arg1);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCalcBounds(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  float *arg1 = (float *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(float **)&jarg3; 
  arg4 = *(float **)&jarg4; 
  rcCalcBounds((float const *)arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCalcGridSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jfloat jarg3, jlong jarg4, jlong jarg5) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = (float)jarg3; 
  arg4 = *(int **)&jarg4; 
  arg5 = *(int **)&jarg5; 
  rcCalcGridSize((float const *)arg1,(float const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCreateHeightfield(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6, jfloat jarg7, jfloat jarg8) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcHeightfield *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  float *arg5 = (float *) 0 ;
  float *arg6 = (float *) 0 ;
  float arg7 ;
  float arg8 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(float **)&jarg5; 
  arg6 = *(float **)&jarg6; 
  arg7 = (float)jarg7; 
  arg8 = (float)jarg8; 
  result = (bool)rcCreateHeightfield(arg1,*arg2,arg3,arg4,(float const *)arg5,(float const *)arg6,arg7,arg8);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcMarkWalkableTriangles(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7) {
  rcContext *arg1 = (rcContext *) 0 ;
  float arg2 ;
  float *arg3 = (float *) 0 ;
  int arg4 ;
  int *arg5 = (int *) 0 ;
  int arg6 ;
  unsigned char *arg7 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(float **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(int **)&jarg5; 
  arg6 = (int)jarg6; 
  arg7 = *(unsigned char **)&jarg7; 
  rcMarkWalkableTriangles(arg1,arg2,(float const *)arg3,arg4,(int const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcClearUnwalkableTriangles(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7) {
  rcContext *arg1 = (rcContext *) 0 ;
  float arg2 ;
  float *arg3 = (float *) 0 ;
  int arg4 ;
  int *arg5 = (int *) 0 ;
  int arg6 ;
  unsigned char *arg7 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = *(float **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(int **)&jarg5; 
  arg6 = (int)jarg6; 
  arg7 = *(unsigned char **)&jarg7; 
  rcClearUnwalkableTriangles(arg1,arg2,(float const *)arg3,arg4,(int const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAddSpan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5, jint jarg6, jshort jarg7, jint jarg8) {
  rcContext *arg1 = (rcContext *) 0 ;
  rcHeightfield *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  unsigned short arg5 ;
  unsigned short arg6 ;
  unsigned char arg7 ;
  int arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (unsigned short)jarg5; 
  arg6 = (unsigned short)jarg6; 
  arg7 = (unsigned char)jarg7; 
  arg8 = (int)jarg8; 
  rcAddSpan(arg1,*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcRasterizeTriangle_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jshort jarg5, jlong jarg6, jobject jarg6_, jint jarg7) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  unsigned char arg5 ;
  rcHeightfield *arg6 = 0 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg6_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(float **)&jarg3; 
  arg4 = *(float **)&jarg4; 
  arg5 = (unsigned char)jarg5; 
  arg6 = *(rcHeightfield **)&jarg6;
  if (!arg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  arg7 = (int)jarg7; 
  rcRasterizeTriangle(arg1,(float const *)arg2,(float const *)arg3,(float const *)arg4,arg5,*arg6,arg7);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcRasterizeTriangle_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jshort jarg5, jlong jarg6, jobject jarg6_) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  unsigned char arg5 ;
  rcHeightfield *arg6 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg6_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(float **)&jarg3; 
  arg4 = *(float **)&jarg4; 
  arg5 = (unsigned char)jarg5; 
  arg6 = *(rcHeightfield **)&jarg6;
  if (!arg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  rcRasterizeTriangle(arg1,(float const *)arg2,(float const *)arg3,(float const *)arg4,arg5,*arg6);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcRasterizeTriangles_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_, jint jarg8) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  unsigned char *arg5 = (unsigned char *) 0 ;
  int arg6 ;
  rcHeightfield *arg7 = 0 ;
  int arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg7_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(int **)&jarg4; 
  arg5 = *(unsigned char **)&jarg5; 
  arg6 = (int)jarg6; 
  arg7 = *(rcHeightfield **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  arg8 = (int)jarg8; 
  rcRasterizeTriangles(arg1,(float const *)arg2,arg3,(int const *)arg4,(unsigned char const *)arg5,arg6,*arg7,arg8);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcRasterizeTriangles_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  unsigned char *arg5 = (unsigned char *) 0 ;
  int arg6 ;
  rcHeightfield *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg7_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(int **)&jarg4; 
  arg5 = *(unsigned char **)&jarg5; 
  arg6 = (int)jarg6; 
  arg7 = *(rcHeightfield **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  rcRasterizeTriangles(arg1,(float const *)arg2,arg3,(int const *)arg4,(unsigned char const *)arg5,arg6,*arg7);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcRasterizeTriangles_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_, jint jarg8) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  unsigned short *arg4 = (unsigned short *) 0 ;
  unsigned char *arg5 = (unsigned char *) 0 ;
  int arg6 ;
  rcHeightfield *arg7 = 0 ;
  int arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg7_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(unsigned short **)&jarg4; 
  arg5 = *(unsigned char **)&jarg5; 
  arg6 = (int)jarg6; 
  arg7 = *(rcHeightfield **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  arg8 = (int)jarg8; 
  rcRasterizeTriangles(arg1,(float const *)arg2,arg3,(unsigned short const *)arg4,(unsigned char const *)arg5,arg6,*arg7,arg8);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcRasterizeTriangles_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  unsigned short *arg4 = (unsigned short *) 0 ;
  unsigned char *arg5 = (unsigned char *) 0 ;
  int arg6 ;
  rcHeightfield *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg7_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(unsigned short **)&jarg4; 
  arg5 = *(unsigned char **)&jarg5; 
  arg6 = (int)jarg6; 
  arg7 = *(rcHeightfield **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  rcRasterizeTriangles(arg1,(float const *)arg2,arg3,(unsigned short const *)arg4,(unsigned char const *)arg5,arg6,*arg7);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcRasterizeTriangles_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  int arg4 ;
  rcHeightfield *arg5 = 0 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(unsigned char **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(rcHeightfield **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  arg6 = (int)jarg6; 
  rcRasterizeTriangles(arg1,(float const *)arg2,(unsigned char const *)arg3,arg4,*arg5,arg6);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcRasterizeTriangles_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  int arg4 ;
  rcHeightfield *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(unsigned char **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(rcHeightfield **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  rcRasterizeTriangles(arg1,(float const *)arg2,(unsigned char const *)arg3,arg4,*arg5);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFilterLowHangingWalkableObstacles(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  rcContext *arg1 = (rcContext *) 0 ;
  int arg2 ;
  rcHeightfield *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(rcHeightfield **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  rcFilterLowHangingWalkableObstacles(arg1,arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFilterLedgeSpans(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  rcContext *arg1 = (rcContext *) 0 ;
  int arg2 ;
  int arg3 ;
  rcHeightfield *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(rcHeightfield **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  rcFilterLedgeSpans(arg1,arg2,arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFilterWalkableLowHeightSpans(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  rcContext *arg1 = (rcContext *) 0 ;
  int arg2 ;
  rcHeightfield *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(rcHeightfield **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return ;
  } 
  rcFilterWalkableLowHeightSpans(arg1,arg2,*arg3);
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcGetHeightFieldSpanCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcHeightfield *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return 0;
  } 
  result = (int)rcGetHeightFieldSpanCount(arg1,*arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildCompactHeightfield(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  int arg2 ;
  int arg3 ;
  rcHeightfield *arg4 = 0 ;
  rcCompactHeightfield *arg5 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(rcHeightfield **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfield & reference is null");
    return 0;
  } 
  arg5 = *(rcCompactHeightfield **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  result = (bool)rcBuildCompactHeightfield(arg1,arg2,arg3,*arg4,*arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcErodeWalkableArea(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  int arg2 ;
  rcCompactHeightfield *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(rcCompactHeightfield **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  result = (bool)rcErodeWalkableArea(arg1,arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcMedianFilterWalkableArea(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcCompactHeightfield *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcCompactHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  result = (bool)rcMedianFilterWalkableArea(arg1,*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcMarkBoxArea(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jshort jarg4, jlong jarg5, jobject jarg5_) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  unsigned char arg4 ;
  rcCompactHeightfield *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = *(float **)&jarg3; 
  arg4 = (unsigned char)jarg4; 
  arg5 = *(rcCompactHeightfield **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return ;
  } 
  rcMarkBoxArea(arg1,(float const *)arg2,(float const *)arg3,arg4,*arg5);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcMarkConvexPolyArea(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jfloat jarg4, jfloat jarg5, jshort jarg6, jlong jarg7, jobject jarg7_) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  float arg4 ;
  float arg5 ;
  unsigned char arg6 ;
  rcCompactHeightfield *arg7 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg7_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (unsigned char)jarg6; 
  arg7 = *(rcCompactHeightfield **)&jarg7;
  if (!arg7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return ;
  } 
  rcMarkConvexPolyArea(arg1,(float const *)arg2,arg3,arg4,arg5,arg6,*arg7);
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcOffsetPoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  float *arg1 = (float *) 0 ;
  int arg2 ;
  float arg3 ;
  float *arg4 = (float *) 0 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = *(float **)&jarg4; 
  arg5 = (int)jarg5; 
  result = (int)rcOffsetPoly((float const *)arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcMarkCylinderArea(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jfloat jarg3, jfloat jarg4, jshort jarg5, jlong jarg6, jobject jarg6_) {
  rcContext *arg1 = (rcContext *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  unsigned char arg5 ;
  rcCompactHeightfield *arg6 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg6_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(float **)&jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (unsigned char)jarg5; 
  arg6 = *(rcCompactHeightfield **)&jarg6;
  if (!arg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return ;
  } 
  rcMarkCylinderArea(arg1,(float const *)arg2,arg3,arg4,arg5,*arg6);
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildDistanceField(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcCompactHeightfield *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcCompactHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  result = (bool)rcBuildDistanceField(arg1,*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildRegions(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcCompactHeightfield *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcCompactHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  result = (bool)rcBuildRegions(arg1,*arg2,arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildRegionsMonotone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcCompactHeightfield *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcCompactHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  result = (bool)rcBuildRegionsMonotone(arg1,*arg2,arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcSetCon(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  rcCompactSpan *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactSpan & reference is null");
    return ;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  rcSetCon(*arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcGetCon(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  rcCompactSpan *arg1 = 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcCompactSpan **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactSpan const & reference is null");
    return 0;
  } 
  arg2 = (int)jarg2; 
  result = (int)rcGetCon((rcCompactSpan const &)*arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcGetDirOffsetX(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  int arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (int)rcGetDirOffsetX(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcGetDirOffsetY(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  int arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (int)rcGetDirOffsetY(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildHeightfieldLayers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcCompactHeightfield *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  rcHeightfieldLayerSet *arg5 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcCompactHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(rcHeightfieldLayerSet **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcHeightfieldLayerSet & reference is null");
    return 0;
  } 
  result = (bool)rcBuildHeightfieldLayers(arg1,*arg2,arg3,arg4,*arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildContours_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcCompactHeightfield *arg2 = 0 ;
  float arg3 ;
  int arg4 ;
  rcContourSet *arg5 = 0 ;
  int arg6 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcCompactHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  arg3 = (float)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(rcContourSet **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcContourSet & reference is null");
    return 0;
  } 
  arg6 = (int)jarg6; 
  result = (bool)rcBuildContours(arg1,*arg2,arg3,arg4,*arg5,arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildContours_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcCompactHeightfield *arg2 = 0 ;
  float arg3 ;
  int arg4 ;
  rcContourSet *arg5 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcCompactHeightfield **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield & reference is null");
    return 0;
  } 
  arg3 = (float)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(rcContourSet **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcContourSet & reference is null");
    return 0;
  } 
  result = (bool)rcBuildContours(arg1,*arg2,arg3,arg4,*arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildPolyMesh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcContourSet *arg2 = 0 ;
  int arg3 ;
  rcPolyMesh *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcContourSet **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcContourSet & reference is null");
    return 0;
  } 
  arg3 = (int)jarg3; 
  arg4 = *(rcPolyMesh **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcPolyMesh & reference is null");
    return 0;
  } 
  result = (bool)rcBuildPolyMesh(arg1,*arg2,arg3,*arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcMergePolyMeshes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcPolyMesh **arg2 = (rcPolyMesh **) 0 ;
  int arg3 ;
  rcPolyMesh *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcPolyMesh ***)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(rcPolyMesh **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcPolyMesh & reference is null");
    return 0;
  } 
  result = (bool)rcMergePolyMeshes(arg1,arg2,arg3,*arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcBuildPolyMeshDetail(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jfloat jarg4, jfloat jarg5, jlong jarg6, jobject jarg6_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcPolyMesh *arg2 = 0 ;
  rcCompactHeightfield *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  rcPolyMeshDetail *arg6 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg6_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcPolyMesh **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcPolyMesh const & reference is null");
    return 0;
  } 
  arg3 = *(rcCompactHeightfield **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcCompactHeightfield const & reference is null");
    return 0;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = *(rcPolyMeshDetail **)&jarg6;
  if (!arg6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcPolyMeshDetail & reference is null");
    return 0;
  } 
  result = (bool)rcBuildPolyMeshDetail(arg1,(rcPolyMesh const &)*arg2,(rcCompactHeightfield const &)*arg3,arg4,arg5,*arg6);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcCopyPolyMesh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcPolyMesh *arg2 = 0 ;
  rcPolyMesh *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcPolyMesh **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcPolyMesh const & reference is null");
    return 0;
  } 
  arg3 = *(rcPolyMesh **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcPolyMesh & reference is null");
    return 0;
  } 
  result = (bool)rcCopyPolyMesh(arg1,(rcPolyMesh const &)*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcMergePolyMeshDetails(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jboolean jresult = 0 ;
  rcContext *arg1 = (rcContext *) 0 ;
  rcPolyMeshDetail **arg2 = (rcPolyMeshDetail **) 0 ;
  int arg3 ;
  rcPolyMeshDetail *arg4 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(rcContext **)&jarg1; 
  arg2 = *(rcPolyMeshDetail ***)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(rcPolyMeshDetail **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "rcPolyMeshDetail & reference is null");
    return 0;
  } 
  result = (bool)rcMergePolyMeshDetails(arg1,arg2,arg3,*arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAllocSetCustom(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  rcAllocFunc *arg1 = (rcAllocFunc *) 0 ;
  rcFreeFunc *arg2 = (rcFreeFunc *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcAllocFunc **)&jarg1; 
  arg2 = *(rcFreeFunc **)&jarg2; 
  rcAllocSetCustom(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcAlloc(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  rcAllocHint arg2 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (rcAllocHint)jarg2; 
  result = (void *)rcAlloc(arg1,arg2);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcFree(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void *arg1 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  rcFree(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcIntArray_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  rcIntArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (rcIntArray *)new rcIntArray();
  *(rcIntArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_new_1rcIntArray_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  rcIntArray *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (rcIntArray *)new rcIntArray(arg1);
  *(rcIntArray **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_delete_1rcIntArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rcIntArray *arg1 = (rcIntArray *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rcIntArray **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcIntArray_1resize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcIntArray *arg1 = (rcIntArray *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcIntArray **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->resize(arg2);
}


SWIGEXPORT void JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcIntArray_1push(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  rcIntArray *arg1 = (rcIntArray *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcIntArray **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->push(arg2);
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcIntArray_1pop(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcIntArray *arg1 = (rcIntArray *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcIntArray **)&jarg1; 
  result = (int)(arg1)->pop();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_jme3_ai_recast_utils_RecastJNI_rcIntArray_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  rcIntArray *arg1 = (rcIntArray *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rcIntArray **)&jarg1; 
  result = (int)((rcIntArray const *)arg1)->size();
  jresult = (jint)result; 
  return jresult;
}


#ifdef __cplusplus
}
#endif

